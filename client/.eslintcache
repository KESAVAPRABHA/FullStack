[{"C:\\MERN-Stack-Book-App\\client\\src\\index.js":"1","C:\\MERN-Stack-Book-App\\client\\src\\components\\Results\\index.js":"2","C:\\MERN-Stack-Book-App\\client\\src\\components\\NoMatch\\NoMatch.jsx":"3","C:\\MERN-Stack-Book-App\\client\\src\\components\\Error\\index.js":"4","C:\\MERN-Stack-Book-App\\client\\src\\components\\Navbar\\Navbar.js":"5","C:\\MERN-Stack-Book-App\\client\\src\\components\\Footer\\index.js":"6","C:\\MERN-Stack-Book-App\\client\\src\\components\\Navbar\\index.js":"7","C:\\MERN-Stack-Book-App\\client\\src\\components\\Loading\\index.js":"8","C:\\MERN-Stack-Book-App\\client\\src\\components\\Footer\\Footer.jsx":"9","C:\\MERN-Stack-Book-App\\client\\src\\pages\\Search.jsx":"10","C:\\MERN-Stack-Book-App\\client\\src\\components\\Results\\Results.jsx":"11","C:\\MERN-Stack-Book-App\\client\\src\\App.jsx":"12","C:\\MERN-Stack-Book-App\\client\\src\\pages\\Save.jsx":"13","C:\\MERN-Stack-Book-App\\client\\src\\pages\\BookCard.jsx":"14","C:\\MERN-Stack-Book-App\\client\\src\\components\\Loading\\Loading.jsx":"15","C:\\MERN-Stack-Book-App\\client\\src\\components\\NoMatch\\index.js":"16","C:\\MERN-Stack-Book-App\\client\\src\\components\\Signup.jsx":"17","C:\\MERN-Stack-Book-App\\client\\src\\utils\\GlobalContext.js":"18","C:\\MERN-Stack-Book-App\\client\\src\\components\\Error\\Error.jsx":"19","C:\\MERN-Stack-Book-App\\client\\src\\components\\Login.jsx":"20","C:\\BookRecomendations\\client\\src\\App.jsx":"21","C:\\BookRecomendations\\client\\src\\components\\Footer\\Footer.jsx":"22","C:\\BookRecomendations\\client\\src\\pages\\BookCard.jsx":"23","C:\\BookRecomendations\\client\\src\\components\\Results\\Results.jsx":"24","C:\\BookRecomendations\\client\\src\\components\\Login.jsx":"25","C:\\BookRecomendations\\client\\src\\pages\\Search.jsx":"26","C:\\BookRecomendations\\client\\src\\components\\NoMatch\\NoMatch.jsx":"27","C:\\BookRecomendations\\client\\src\\components\\Navbar\\Navbar.js":"28","C:\\BookRecomendations\\client\\src\\pages\\Save.jsx":"29","C:\\BookRecomendations\\client\\src\\components\\Signup.jsx":"30"},{"size":238,"mtime":1730019173126,"results":"31","hashOfConfig":"32"},{"size":35,"mtime":1730018662707,"results":"33","hashOfConfig":"32"},{"size":368,"mtime":1729695483954,"results":"34","hashOfConfig":"32"},{"size":33,"mtime":1729695483949,"results":"35","hashOfConfig":"32"},{"size":1038,"mtime":1730002179915,"results":"36","hashOfConfig":"32"},{"size":37,"mtime":1729695483950,"results":"37","hashOfConfig":"32"},{"size":37,"mtime":1729695483953,"results":"38","hashOfConfig":"32"},{"size":35,"mtime":1729695483951,"results":"39","hashOfConfig":"32"},{"size":701,"mtime":1729743494539,"results":"40","hashOfConfig":"32"},{"size":8147,"mtime":1730024682602,"results":"41","hashOfConfig":"32"},{"size":12783,"mtime":1730023337702,"results":"42","hashOfConfig":"32"},{"size":1302,"mtime":1730019047808,"results":"43","hashOfConfig":"32"},{"size":2658,"mtime":1730002653169,"results":"44","hashOfConfig":"32"},{"size":1121,"mtime":1729749853441,"results":"45","hashOfConfig":"32"},{"size":509,"mtime":1729695483951,"results":"46","hashOfConfig":"32"},{"size":33,"mtime":1729695483954,"results":"47","hashOfConfig":"32"},{"size":3590,"mtime":1730005199542,"results":"48","hashOfConfig":"32"},{"size":786,"mtime":1730024786393,"results":"49","hashOfConfig":"32"},{"size":315,"mtime":1729695483948,"results":"50","hashOfConfig":"32"},{"size":3152,"mtime":1729766000549,"results":"51","hashOfConfig":"32"},{"size":1302,"mtime":1730019047808,"results":"52","hashOfConfig":"53"},{"size":701,"mtime":1729743494539,"results":"54","hashOfConfig":"53"},{"size":1121,"mtime":1729749853441,"results":"55","hashOfConfig":"53"},{"size":12786,"mtime":1730042406937,"results":"56","hashOfConfig":"53"},{"size":3152,"mtime":1730087482240,"results":"57","hashOfConfig":"53"},{"size":8147,"mtime":1730024682602,"results":"58","hashOfConfig":"53"},{"size":368,"mtime":1729695483954,"results":"59","hashOfConfig":"53"},{"size":1038,"mtime":1730002179915,"results":"60","hashOfConfig":"53"},{"size":7774,"mtime":1730087751897,"results":"61","hashOfConfig":"53"},{"size":3590,"mtime":1730087479590,"results":"62","hashOfConfig":"53"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1nw0se3",{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"69"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"69"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"84","messages":"85","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"93"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"109"},"1yvlqnj",{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"109"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"109"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\MERN-Stack-Book-App\\client\\src\\index.js",[],"C:\\MERN-Stack-Book-App\\client\\src\\components\\Results\\index.js",[],"C:\\MERN-Stack-Book-App\\client\\src\\components\\NoMatch\\NoMatch.jsx",[],["128","129"],"C:\\MERN-Stack-Book-App\\client\\src\\components\\Error\\index.js",[],"C:\\MERN-Stack-Book-App\\client\\src\\components\\Navbar\\Navbar.js",[],"C:\\MERN-Stack-Book-App\\client\\src\\components\\Footer\\index.js",[],"C:\\MERN-Stack-Book-App\\client\\src\\components\\Navbar\\index.js",[],"C:\\MERN-Stack-Book-App\\client\\src\\components\\Loading\\index.js",[],"C:\\MERN-Stack-Book-App\\client\\src\\components\\Footer\\Footer.jsx",[],"C:\\MERN-Stack-Book-App\\client\\src\\pages\\Search.jsx",[],"C:\\MERN-Stack-Book-App\\client\\src\\components\\Results\\Results.jsx",["130"],"// import React, { useEffect , useState} from 'react';\r\n// import { useGlobalContext } from '../../utils/GlobalContext';\r\n// import { Button, Container, Col, Row, Card } from 'react-bootstrap';\r\n// import { toast } from 'react-toastify';\r\n// import io from 'socket.io-client';\r\n\r\n// let socket;\r\n\r\n// function Results() {\r\n//     const [{ books }] = useGlobalContext(); // Destructure to get books\r\n\r\n//     // Set up socket instance and connection\r\n//     useEffect(() => {\r\n//         socket = io('http://localhost:3000'); // Ensure this URL matches your server setup\r\n\r\n//         socket.on('connect', () => {\r\n//             console.log('Connected to the socket server');\r\n//         });\r\n\r\n//         socket.on('saved book title', title => {\r\n//             toast.success(`Saved a book titled ${title}`, {\r\n//                 position: toast.POSITION.TOP_CENTER,\r\n//             });\r\n//         });\r\n\r\n//         socket.on('connect_error', err => {\r\n//             console.error('Socket connection error:', err);\r\n//         });\r\n\r\n//         return () => {\r\n//             socket.disconnect(); // Clean up on unmount\r\n//         };\r\n//     }, []);\r\n\r\n//     const handleSaveBook = async (book) => {\r\n//         try {\r\n//             const response = await fetch('http://localhost:3000/api/books', {\r\n//                 headers: {\r\n//                     'Content-Type': 'application/json',\r\n//                 },\r\n//                 method: 'POST',\r\n//                 body: JSON.stringify({\r\n//                     id: book.id,\r\n//                     title: book.volumeInfo.title,\r\n//                     authors: book.volumeInfo.authors,\r\n//                     description: book.volumeInfo.description,\r\n//                     infoLink: book.volumeInfo.infoLink,\r\n//                     image: book.volumeInfo.imageLinks?.thumbnail,\r\n//                 }),\r\n//             });\r\n\r\n//             if (!response.ok) {\r\n//                 const errorJson = await response.json();\r\n//                 throw new Error(errorJson.message || 'Error saving the book');\r\n//             }\r\n\r\n//             const json = await response.json();\r\n\r\n//             if (json.success) {\r\n//                 socket.emit('save book', json.data.title);\r\n//             } else {\r\n//                 toast.warning('This book is already saved!', {\r\n//                     position: toast.POSITION.TOP_CENTER,\r\n//                 });\r\n//             }\r\n//         } catch (error) {\r\n//             console.error('Error saving book:', error);\r\n//             toast.error('Error saving book: ' + error.message, {\r\n//                 position: toast.POSITION.TOP_CENTER,\r\n//             });\r\n//         }\r\n//     };\r\n\r\n//     return (\r\n//         <Container className='my-5 p-3'>\r\n//             <Row className='mx-5'>\r\n//                 {books && books.map((book, index) => (\r\n//                     <Col key={index} className='mb-4'>\r\n//                         <Card style={{ width: '300px', height: '700px', backgroundColor: '#deeaf7' }} className='p-4'>\r\n//                             {book.volumeInfo.imageLinks && (\r\n//                                 <Card.Img\r\n//                                     variant='top'\r\n//                                     src={book.volumeInfo.imageLinks.thumbnail}\r\n//                                     style={{ height: 320 }}\r\n//                                 />\r\n//                             )}\r\n//                             <Card.Body>\r\n//                                 <Card.Title>{book.volumeInfo.title}</Card.Title>\r\n//                                 {book.volumeInfo.authors && (\r\n//                                     <Card.Title className='font-italic text-muted' style={{ fontSize: '1.1rem' }}>\r\n//                                         By: {book.volumeInfo.authors.join(', ')}\r\n//                                     </Card.Title>\r\n//                                 )}\r\n//                                 {book.volumeInfo.description && (\r\n//                                     <Card.Text>{book.volumeInfo.description.substr(0, 100)}</Card.Text>\r\n//                                 )}\r\n//                                 {book.volumeInfo.infoLink && (\r\n//                                     <Card.Text>\r\n//                                         <a href={book.volumeInfo.infoLink} target='_blank' rel='noreferrer'>\r\n//                                             View Details\r\n//                                         </a>\r\n//                                     </Card.Text>\r\n//                                 )}\r\n//                                 <div className='mt-4'>\r\n//                                     <Button size='sm' variant='warning' onClick={() => handleSaveBook(book)}>\r\n//                                         Save Book\r\n//                                     </Button>\r\n//                                 </div>\r\n//                             </Card.Body>\r\n//                         </Card>\r\n//                     </Col>\r\n//                 ))}\r\n//             </Row>\r\n//         </Container>\r\n//     );\r\n// }\r\n\r\n// export default Results;\r\n\r\n\r\n\r\nimport React, { useEffect, useState } from 'react';\r\nimport { useGlobalContext } from '../../utils/GlobalContext';\r\nimport { Button, Container, Col, Row, Card } from 'react-bootstrap';\r\nimport { toast } from 'react-toastify';\r\nimport io from 'socket.io-client';\r\n\r\nlet socket;\r\n\r\nfunction Results() {\r\n    const [{ books }] = useGlobalContext(); // Destructure to get books\r\n    const [recommendedBooks, setRecommendedBooks] = useState([]); // State for recommendations\r\n\r\n    // Set up socket instance and connection\r\n    useEffect(() => {\r\n        socket = io('http://localhost:3000'); // Ensure this URL matches your server setup\r\n\r\n        socket.on('connect', () => {\r\n            console.log('Connected to the socket server');\r\n        });\r\n\r\n        socket.on('saved book title', title => {\r\n            toast.success(`Saved a book titled ${title}`, {\r\n                position: toast.POSITION.TOP_CENTER,\r\n            });\r\n        });\r\n\r\n        socket.on('connect_error', err => {\r\n            console.error('Socket connection error:', err);\r\n        });\r\n\r\n        return () => {\r\n            socket.disconnect(); // Clean up on unmount\r\n        };\r\n    }, []);\r\n\r\n    // Function to fetch recommendations\r\n    useEffect(() => {\r\n        const fetchRecommendations = async () => {\r\n            try {\r\n                const searchTerm = \"F. Scott Fitzgerald\"; // Use a relevant term\r\n                const response = await fetch('http://localhost:3000/api/recommendations');\r\n                if (response.ok) {\r\n                    const data = await response.json();\r\n                    setRecommendedBooks(data);\r\n                } else {\r\n                    console.warn('Failed to fetch recommendations:', response.statusText);\r\n                }\r\n            } catch (error) {\r\n                console.error('Error fetching recommendations:', error);\r\n            }\r\n        };\r\n    \r\n        fetchRecommendations();\r\n    }, []); // The empty array ensures this runs only once on mount\r\n    \r\n\r\n    const handleSaveBook = async (book) => {\r\n        try {\r\n            const response = await fetch('http://localhost:3000/api/books', {\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                },\r\n                method: 'POST',\r\n                body: JSON.stringify({\r\n                    id: book.id,\r\n                    title: book.volumeInfo.title,\r\n                    authors: book.volumeInfo.authors,\r\n                    description: book.volumeInfo.description,\r\n                    infoLink: book.volumeInfo.infoLink,\r\n                    image: book.volumeInfo.imageLinks?.thumbnail,\r\n                }),\r\n            });\r\n\r\n            if (!response.ok) {\r\n                const errorJson = await response.json();\r\n                throw new Error(errorJson.message || 'Error saving the book');\r\n            }\r\n\r\n            const json = await response.json();\r\n\r\n            if (json.success) {\r\n                socket.emit('save book', json.data.title);\r\n            } else {\r\n                toast.warning('This book is already saved!', {\r\n                    position: toast.POSITION.TOP_CENTER,\r\n                });\r\n            }\r\n        } catch (error) {\r\n            console.error('Error saving book:', error);\r\n            toast.error('Error saving book: ' + error.message, {\r\n                position: toast.POSITION.TOP_CENTER,\r\n            });\r\n        }\r\n    };\r\n    return (\r\n        <Container className='my-5 p-3'>\r\n            <Row className='mx-5'>\r\n                {books && books.map((book, index) => (\r\n                    <Col key={index} className='mb-4'>\r\n                        <Card style={{ width: '300px', height: '700px', backgroundColor: '#deeaf7' }} className='p-4'>\r\n                            {book.volumeInfo.imageLinks && (\r\n                                <Card.Img\r\n                                    variant='top'\r\n                                    src={book.volumeInfo.imageLinks.thumbnail}\r\n                                    style={{ height: 320 }}\r\n                                />\r\n                            )}\r\n                            <Card.Body>\r\n                                <Card.Title>{book.volumeInfo.title}</Card.Title>\r\n                                {book.volumeInfo.authors && (\r\n                                    <Card.Title className='font-italic text-muted' style={{ fontSize: '1.1rem' }}>\r\n                                        By: {book.volumeInfo.authors.join(', ')}\r\n                                    </Card.Title>\r\n                                )}\r\n                                {book.volumeInfo.description && (\r\n                                    <Card.Text>{book.volumeInfo.description.substr(0, 100)}</Card.Text>\r\n                                )}\r\n                                {book.volumeInfo.infoLink && (\r\n                                    <Card.Text>\r\n                                        <a href={book.volumeInfo.infoLink} target='_blank' rel='noreferrer'>\r\n                                            View Details\r\n                                        </a>\r\n                                    </Card.Text>\r\n                                )}\r\n                                <div className='mt-4'>\r\n                                    <Button size='sm' variant='warning' onClick={() => handleSaveBook(book)}>\r\n                                        Save Book\r\n                                    </Button>\r\n                                </div>\r\n                            </Card.Body>\r\n                        </Card>\r\n                    </Col>\r\n                ))}\r\n            </Row>\r\n    \r\n            {/* Recommendations Section */}\r\n            <h3 className='my-5'>You May Also Like</h3>\r\n            <Row className='mx-5'>\r\n                {recommendedBooks.length > 0 ? (\r\n                    recommendedBooks.map((book, index) => (\r\n                        <Col key={index} className='mb-4'>\r\n                            <Card style={{ width: '300px', height: '700px', backgroundColor: '#deeaf7' }} className='p-4'>\r\n                                {book.image ? (\r\n                                    <Card.Img variant='top' src={book.image} style={{ height: 320 }} />\r\n                                ) : (\r\n                                    <Card.Img variant='top' src='default-thumbnail.jpg' style={{ height: 320 }} />\r\n                                )}\r\n                                <Card.Body>\r\n                                    <Card.Title>{book.title || 'Untitled'}</Card.Title>\r\n                                    {book.authors && (\r\n                                        <Card.Text className='font-italic text-muted'>\r\n                                            By: {book.authors.join(', ')}\r\n                                        </Card.Text>\r\n                                    )}\r\n                                    {book.infoLink && (\r\n                                        <Card.Text>\r\n                                            <a href={book.infoLink} target='_blank' rel='noreferrer'>\r\n                                                View Details\r\n                                            </a>\r\n                                        </Card.Text>\r\n                                    )}\r\n                                </Card.Body>\r\n                            </Card>\r\n                        </Col>\r\n                    ))\r\n                ) : (\r\n                    <p>No recommendations available.</p>\r\n                )}\r\n            </Row>\r\n        </Container>\r\n    );\r\n    \r\n\r\n}\r\nexport default Results;\r\n","C:\\MERN-Stack-Book-App\\client\\src\\App.jsx",[],"C:\\MERN-Stack-Book-App\\client\\src\\pages\\Save.jsx",[],"C:\\MERN-Stack-Book-App\\client\\src\\pages\\BookCard.jsx",[],["131","132"],"C:\\MERN-Stack-Book-App\\client\\src\\components\\Loading\\Loading.jsx",[],"C:\\MERN-Stack-Book-App\\client\\src\\components\\NoMatch\\index.js",[],["133","134"],"C:\\MERN-Stack-Book-App\\client\\src\\components\\Signup.jsx",[],"C:\\MERN-Stack-Book-App\\client\\src\\utils\\GlobalContext.js",[],"C:\\MERN-Stack-Book-App\\client\\src\\components\\Error\\Error.jsx",[],"C:\\MERN-Stack-Book-App\\client\\src\\components\\Login.jsx",[],"C:\\BookRecomendations\\client\\src\\App.jsx",[],["135","136"],"C:\\BookRecomendations\\client\\src\\components\\Footer\\Footer.jsx",[],"C:\\BookRecomendations\\client\\src\\pages\\BookCard.jsx",[],"C:\\BookRecomendations\\client\\src\\components\\Results\\Results.jsx",[],"C:\\BookRecomendations\\client\\src\\components\\Login.jsx",[],"C:\\BookRecomendations\\client\\src\\pages\\Search.jsx",[],"C:\\BookRecomendations\\client\\src\\components\\NoMatch\\NoMatch.jsx",[],"C:\\BookRecomendations\\client\\src\\components\\Navbar\\Navbar.js",[],"C:\\BookRecomendations\\client\\src\\pages\\Save.jsx",[],"C:\\BookRecomendations\\client\\src\\components\\Signup.jsx",[],{"ruleId":"137","replacedBy":"138"},{"ruleId":"139","replacedBy":"140"},{"ruleId":"141","severity":1,"message":"142","line":161,"column":23,"nodeType":"143","messageId":"144","endLine":161,"endColumn":33},{"ruleId":"137","replacedBy":"145"},{"ruleId":"139","replacedBy":"146"},{"ruleId":"137","replacedBy":"147"},{"ruleId":"139","replacedBy":"148"},{"ruleId":"137","replacedBy":"149"},{"ruleId":"139","replacedBy":"150"},"no-native-reassign",["151"],"no-negated-in-lhs",["152"],"no-unused-vars","'searchTerm' is assigned a value but never used.","Identifier","unusedVar",["151"],["152"],["151"],["152"],["151"],["152"],"no-global-assign","no-unsafe-negation"]